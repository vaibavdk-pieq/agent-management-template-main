#!/bin/bash

# Setup CodeArtifact configuration using centralized Gradle configuration
# This script reads configuration from gradle.properties and generates necessary files

set -e

echo "🔧 Setting up CodeArtifact configuration from centralized Gradle setup..."

# Function to extract property from gradle.properties
get_gradle_property() {
    local property_name=$1
    local default_value=$2
    
    # Try to get from gradle.properties
    local value=$(grep "^$property_name=" gradle.properties 2>/dev/null | cut -d'=' -f2 || echo "")
    
    if [ -z "$value" ]; then
        echo "$default_value"
    else
        echo "$value"
    fi
}

# Extract CodeArtifact configuration from gradle.properties
CODEARTIFACT_DOMAIN=$(get_gradle_property "codeartifact.domain" "pieq")
CODEARTIFACT_DOMAIN_OWNER=$(get_gradle_property "codeartifact.domainOwner" "910020091862")
CODEARTIFACT_REGION=$(get_gradle_property "codeartifact.region" "us-east-1")
CODEARTIFACT_REPOSITORY=$(get_gradle_property "codeartifact.repository" "pieq-artifact")

echo "📋 CodeArtifact Configuration:"
echo "   Domain: $CODEARTIFACT_DOMAIN"
echo "   Domain Owner: $CODEARTIFACT_DOMAIN_OWNER"
echo "   Region: $CODEARTIFACT_REGION"
echo "   Repository: $CODEARTIFACT_REPOSITORY"

# Get CodeArtifact authorization token
echo "🔑 Getting CodeArtifact authorization token..."
CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
    --domain "$CODEARTIFACT_DOMAIN" \
    --domain-owner "$CODEARTIFACT_DOMAIN_OWNER" \
    --region "$CODEARTIFACT_REGION" \
    --query authorizationToken \
    --output text)

if [ -z "$CODEARTIFACT_AUTH_TOKEN" ]; then
    echo "❌ Failed to get CodeArtifact authorization token"
    exit 1
fi

echo "✅ CodeArtifact token retrieved successfully"

# Create Maven settings.xml
echo "📝 Creating Maven settings.xml..."
mkdir -p ~/.m2

cat > ~/.m2/settings.xml << EOF
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
          http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <servers>
    <server>
      <id>codeartifact</id>
      <username>aws</username>
      <password>\${env.CODEARTIFACT_AUTH_TOKEN}</password>
    </server>
  </servers>
  <profiles>
    <profile>
      <id>codeartifact</id>
      <repositories>
        <repository>
          <id>codeartifact</id>
          <url>https://$CODEARTIFACT_DOMAIN-$CODEARTIFACT_DOMAIN_OWNER.d.codeartifact.$CODEARTIFACT_REGION.amazonaws.com/maven/$CODEARTIFACT_REPOSITORY/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>codeartifact</activeProfile>
  </activeProfiles>
</settings>
EOF

echo "✅ Maven settings.xml created at ~/.m2/settings.xml"

# Export environment variables for use in CI/CD
export CODEARTIFACT_DOMAIN
export CODEARTIFACT_DOMAIN_OWNER
export CODEARTIFACT_REGION
export CODEARTIFACT_REPOSITORY
export CODEARTIFACT_AUTH_TOKEN
export CODEARTIFACT_URL="https://$CODEARTIFACT_DOMAIN-$CODEARTIFACT_DOMAIN_OWNER.d.codeartifact.$CODEARTIFACT_REGION.amazonaws.com/maven/$CODEARTIFACT_REPOSITORY/"

# Create environment file for other processes
cat > codeartifact.env << EOF
# CodeArtifact Configuration (generated by setup-codeartifact.sh)
CODEARTIFACT_DOMAIN=$CODEARTIFACT_DOMAIN
CODEARTIFACT_DOMAIN_OWNER=$CODEARTIFACT_DOMAIN_OWNER
CODEARTIFACT_REGION=$CODEARTIFACT_REGION
CODEARTIFACT_REPOSITORY=$CODEARTIFACT_REPOSITORY
CODEARTIFACT_URL=$CODEARTIFACT_URL
CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN
EOF

echo "✅ Environment variables exported and saved to codeartifact.env"

# Verify PIEQ library versions if gradle.properties exists
if [ -f "gradle.properties" ]; then
    echo "📦 PIEQ Library Versions:"
    PIEQ_CORE_VERSION=$(get_gradle_property "pieq.core.lib.version" "latest")
    PIEQ_HTTP_CLIENT_VERSION=$(get_gradle_property "pieq.http.client.lib.version" "latest")
    
    echo "   pieq-core-lib: $PIEQ_CORE_VERSION"
    echo "   pieq-http-client-lib: $PIEQ_HTTP_CLIENT_VERSION"
    
    # Export these for Docker builds
    export PIEQ_CORE_LIB_VERSION="$PIEQ_CORE_VERSION"
    export PIEQ_HTTP_CLIENT_LIB_VERSION="$PIEQ_HTTP_CLIENT_VERSION"
    
    # Add to environment file
    cat >> codeartifact.env << EOF
PIEQ_CORE_LIB_VERSION=$PIEQ_CORE_VERSION
PIEQ_HTTP_CLIENT_LIB_VERSION=$PIEQ_HTTP_CLIENT_VERSION
EOF
fi

echo "🎉 CodeArtifact setup completed successfully!"
echo "📁 Generated files:"
echo "   - ~/.m2/settings.xml (Maven configuration)"
echo "   - codeartifact.env (Environment variables - temporary file)"
echo ""
echo "⚠️  Note: codeartifact.env contains sensitive tokens and is automatically ignored by git"
echo ""
echo "💡 To use in CI/CD workflows:"
echo "   source codeartifact.env"
echo "   # or"
echo "   export \$(cat codeartifact.env | xargs)" 